{'_':[ 
/**************************************************\
 * Docs Metadata *
\**************************************************/
 
    
    /**************************************************\
     * Getting Started *
    \**************************************************/
    {
        'id':'basics',
        'version':'1.0.x',
        'label':'Getting Started', 
        'description':<>
            <p>
             <strong>
             This guide is applicable to both the jquery-claypool client and server
             application frameworks.
             </strong>  
             Where the two differ functionally the documentation will provide notes and
             examples of usage in each environment.
          </p>
        </>,
        'sections':[{
    
'name':'creating a new project',
'description':<>
    <p>
      To follow along with this step create this folder structure
     with a couple javascript files:
<pre class='box'><code>.
     \example
         \app
             \boot
               - client.js
             \configs
               - config.js
         \lib
           - jquery.js
           - jquery.claypool.js
     - index.html
</code></pre>
   </p>
</>,
'subsections':[{  

    'name':'scanning',
    'description':<>
       <p>
    Scanning is a railable pattern that allows you to setup a project
    with as little configuration as possible, and as you progress,
    it saves you some of the redundency of configuration by making use 
    of some simple conventions. The following shows all the configuration
    we need to get going.
<pre class='box'><code>/**   config.js   **/

    var Example = &amp;#x7B;
        Models:&amp;#x7B;&#x7D;,
        Views:&amp;#x7B;&#x7D;,
        Controllers:&amp;#x7B;&#x7D;
    &#x7D;;
    
    (function($)&amp;#x7B;
    
       $.scan([
            "Example.Models", 
            "Example.Views", 
            "Example.Controllers"
        ]);
        
    &#x7D;)(jQuery);
</code></pre>
    This simply lets jquery-claypool know where it will eventually
    look in the global namespace to find your application event handlers
    etc.  The 'Example' object literal is basically how we'll organize and 
    identify our application specific code. All you need to know for now 
    is that claypool is lazy, and lets you be lazy too.
   </p>
</>

    },{
    
    'name':'boot strapping',
    'description':<>
       <p>
    Booting the application should be wrapped in the usual jquery ready.
    We'll revisit the boot process a little later but for the purposes of
    of little intro, this is good enough to get us going. 
<pre class='box'><code>/**   client.js   **/
    jQuery.noConflict();
    (function($)&amp;#x7B;
        
        $(document).ready(function()&amp;#x7B;
            $.boot();
        &#x7D;);    
        
    &#x7D;)(jQuery);  
</code></pre>
           
       </p>
    </>
    }]

},{

'name':'adding a route',
'subsections':[{    
    'name':'basic paginator',
    'description':<>
       <p>
           {_.paragraph()} 
           <pre class='box'>
           <code>.
       {_.words(2, false)}
           </code>
           </pre>
           {_.sentence()} 
       </p>
    </>
    }]

},{

'name':'lazy event handling',
'subsections':[{ 
    'name':'writing your first event handler',
    'description':<>
       <p>
           {_.paragraph()} 
           <pre class='box'>
           <code>.
       {_.words(2, false)}
           </code>
           </pre>
           {_.sentence()} 
       </p>
    </>
    }]

},{

'name':'adding some logging',
'subsections':[{      
    'name':'keeping it private',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'updating the page',
'subsections':[{ 
    'name':'some loremipsum',
    'description':<>
       <p>
           {_.paragraph()} 
           <pre class='box'>
           <code>.
       {_.words(2, false)}
           </code>
           </pre>
           {_.sentence()} 
       </p>
    </>
    }]
    
},{

'name':'gathering data',
'subsections':[{    
    'name':'just ajax',
    'description':<>
       <p>
           {_.paragraph()} 
           <pre class='box'>
           <code>.
       {_.words(2, false)}
           </code>
           </pre>
           {_.sentence()} 
       </p>
    </>
    }]
    
},{

'name':'working well with others',
'subsections':[{   
    'name':'defining environments',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    },{   
    'name':'selecting environments',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

},{

'name':'dhtml and templates',
'subsections':[{    
    'name':'loremipsum',
    'description':<>
       <p>
           {_.paragraph()} 
           <pre class='box'>
           <code>.
       {_.words(2, false)}
           </code>
           </pre>
           {_.sentence()} 
       </p>
    </>
    }]
    
},{

'name':'advanced topics',
'subsections':[{
    'name':'loremipsum',
    'description':<>
       <p>
           {_.paragraph()} 
           <pre class='box'>
           <code>.
       {_.words(2, false)}
           </code>
           </pre>
           {_.sentence()} 
       </p>
    </>
    }]

}]//end sections

},//end basics
/**************************************************\
 * Getting Started *
\**************************************************/
{
        'id':'more',
        'version':'1.0.x',
        'label':'More of Core', 
        'description':<>
            <p>
              <strong>
              This guide is applicable to both the jquery-claypool client and server
              application frameworks.
              </strong>  
              Where the two differ functionally the documentation will provide notes and
              examples of usage in each environment.
           </p>
        </>,
        'sections':[{
    
'name':'creating a new project',
'subsections':[{  

    'name':'scanning',
    'description':<>
        <p>
            Scanning is a railable pattern that allows you to setup a project
            with as little configuration as possible, and as you progress,
            it saves you some of the redundency of configuration by making use 
            of some simple conventions.
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>

    },{
    
    'name':'boot strapping',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

},{

'name':'adding a route',
'subsections':[{    
    'name':'basic paginator',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
     </>
    }]

},{

'name':'lazy event handling',
'subsections':[{ 
    'name':'writing your first event handler',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

},{

'name':'adding some logging',
'subsections':[{      
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'updating the page',
'subsections':[{ 
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'gathering data',
'subsections':[{    
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'setting an environment',
'subsections':[{   
    'name':'think',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

},{

'name':'dhtml and templates',
'subsections':[{    
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'advanced topics',
'subsections':[{
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

}]//end sections

},//end core
/**************************************************\
 * Advanced  *
\**************************************************/
{
        'id':'advanced',
        'version':'1.0.x',
        'label':'Advanced', 
        'description':<>
            <p>
              <strong>
              This guide is applicable to both the jquery-claypool client and server
              application frameworks.
              </strong>  
              Where the two differ functionally the documentation will provide notes and
              examples of usage in each environment.
           </p>
        </>,
        'sections':[{
    
'name':'creating a new project',
'subsections':[{  

    'name':'scanning',
    'description':<>
        <p>
            Scanning is a railable pattern that allows you to setup a project
            with as little configuration as possible, and as you progress,
            it saves you some of the redundency of configuration by making use 
            of some simple conventions.
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>

    },{
    
    'name':'boot strapping',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

},{

'name':'adding a route',
'subsections':[{    
    'name':'basic paginator',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
     </>
    }]

},{

'name':'lazy event handling',
'subsections':[{ 
    'name':'writing your first event handler',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

},{

'name':'adding some logging',
'subsections':[{      
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'updating the page',
'subsections':[{ 
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'gathering data',
'subsections':[{    
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'setting an environment',
'subsections':[{   
    'name':'think',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

},{

'name':'dhtml and templates',
'subsections':[{    
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]
    
},{

'name':'advanced topics',
'subsections':[{
    'name':'loremipsum',
    'description':<>
        <p>
            {_.paragraph()} 
            <pre class='box'>
            <code>.
        {_.words(2, false)}
            </code>
            </pre>
            {_.sentence()} 
        </p>
    </>
    }]

}]//end sections

},//end advanced
/**************************************************\
 * API *
\**************************************************/
 {
    'id':'api',
    'version':'1.0.x',
    'label':'API', 
    'sections':[
            'conventions',
            'models',
            'views',
            'controllers',
            'services',
            'templates',
            'plugins'
    ],
        
        'conventions':[{
        
'name':'config',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
</>
    },{
'name':'environments',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
</>
    },{
'name':'filters',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
</>
    },{
'name':'logging',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
</>
    },{
'name':'routes',
'description':<>
    <p>
        {_.paragraph()} 
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
        {_.sentence()} 
    </p>
</>
    }],'models':[{
        
'name':'rest',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
</>
    },{
'name':'sdb',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
</>
    }],'views':[{
   
'name':'think',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
 </>
    },{
'name':'update',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
 </>
    },{
'name':'render',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
 </>
 
    }],'controllers':[{
   

'name':'handle',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
 </>
    },{
'name':'events',
'description':<>
    <p>
        {_.paragraph()} 
        
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
    
        
        {_.sentence()} 
    </p>
 </>
 
    }],'services':[{
    
'name':'servlets',
'description':<>
    <p>
        {_.paragraph()} 
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
        {_.sentence()} 
    </p>
</>
    },{
'name':'proxies',
'description':<>
    <p>
        {_.paragraph()} 
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
        {_.sentence()} 
    </p>
</>

    }],'templates':[{
    
'name':'e4x',
'description':<>
    <p>
        {_.paragraph()} 
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
        {_.sentence()} 
    </p>
</>,
'name':'objTree',
'description':<>
    <p>
        {_.paragraph()} 
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
        {_.sentence()} 
    </p>
</>,


    }],'plugins':[{
    
'name':'loremipsum',
'description':<>
    <p>
        {_.paragraph()} 
        <pre class='box'>
        <code>.
    {_.words(2, false)}
        </code>
        </pre>
        {_.sentence()} 
    </p>
</>
    }]
    }
    
]}