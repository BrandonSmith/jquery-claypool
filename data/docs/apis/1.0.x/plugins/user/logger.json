{'_':{
/**************************************************/
    'id':'apis/1.0.x/plugins/user/logger',
    'version':'1.0.x',
    'location':['app/controllers/*','app/views/*', 'app/models/*'],
    'label':'logger', 
    'plugin':'$.logger',
    'sections':[{
/**************************************************/
        'label':'usage',
        'description': <>
        <p>
            <strong>
            Retrieves or creates a category logger.
            </strong>
            This plugin provides an efficient logging implementation that allows 
            application components to log messages at 5 levels to a hierarchical 
            category that can be tuned via app/configs/logging.js
        </p>
    </>
 },{
/**************************************************/
        'label':'options',
        'description':<>
        <p>
            <table cellspacing="0" class="args">
                <tbody><tr class="option"><th>category</th><td class="type"><a href="/Types#String">String</a></td><td class="default"/></tr><tr><td class="desc" colspan="3">A dot-delimited name, usually the namespace of the class the logger is being used in.</td></tr></tbody>
            </table>
        </p>
    </>
 },{
    /**************************************************/
        'label':'examples',
        'description':<>
        <p>
            The logger is returned if any category configured in app/configs/logging.js matches, including the catch-all root category, otherwise a safe, efficient NullLogger instance is returned.

        </p>

            <pre class='box'>
$.logger("MyApp.Controller.HelloController");
            </pre>
        
            
    </> 
}]


}}