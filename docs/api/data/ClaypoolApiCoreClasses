[[PageOutline]]
= Claypool Api Core =
== Classes ==

=== !SimpleCachingStrategy ===
Implements: Claypool.!CachingStrategy

The !SimpleCachingStrategy isn't really a 'caching' strategy in that it stores items in memory. It does provide a very easy way to begin implementing caching that will allow more advanced strategies to be used in the future, as well as providing the fastest strategy possible.

==== constructor ====
    Creates a Cache with the !SimpleCachingStrategy.
    ||'''Parameters'''|| || ||
    ||name 	||type 	||required 	||description
    ||options 	||Object ||false 	||A json object which is extended by the resulting new !SimpleCachingStrategy.
    ''>>  The Claypool.!SimpleCachingStrategy implements the Claypool.!CachingStrategy interface.''

==== add ====
    Adds an item to the cache
     ''>>  See Claypool.!CachingStrategy$Interface for parameter details''' 

==== remove ====
    Removes an item from the cache
     ''>>  See Claypool.!CachingStrategy$Interface for parameter details'' 

==== find ====
    Retrieves items from the cache
     ''>>  See Claypool.!CachingStrategy$Interface for parameter details'' 

==== clear ====
    Clearing the cache resets it.
     ''>>  See Claypool.!CachingStrategy$Interface for parameter details''

=== Router ===
''The Claypool.Router provides a simple approach to flexible retrieval of objects based on a regular expression provided by each object.''

''' Extends: Claypool.!SimpleCachingStrategy '''

The Claypool Router is a powerful little extension of the !SimpleCachingStrategy that allows a collection of objects to be retrieved based on a regular expression which is applied against a given property of the objects.

==== constructor ====
-  Creates a new instance of the Router. 
    ||'''Parameters'''|| || ||
    ||name 	||type 	||required 	||description
    options 	Object 	false 	A json object which is extended by the resulting new !SimpleCachingStrategy.

==== compile ====
-  A router is compiled by passing an array of objects and a key name. The key name may be a '|' delimited list of names to use in order of precedence. Each object in the array should have a regular expression (in the form of a String) named as one of the keys. It is compiled into a regular expression and the compiled expression and original object is stored for later use.
    ||'''Parameters'''|| || ||
    ||name 	||type 	||required 	||description
    ||patternMap 	||Array of Objects 	||true 	||The Array of Objects must all contain one of the properties specified in the patternKey. The specified property will be treated as a regular expression.
    ||patternKey 	||String (optionally delimited by '|') 	||true 	||A list of properties names whose value is treated as a regular expression used to test if an object matches a 'route'.
     ''>>  Chainable.''

==== first ====
-   When the 'first' method is called the compiled patterns are tested and the first match is return as an array of objects containing the 'pattern' and 'payload'. The payload is the original object compiled into the router.
    ||'''Parameters'''|| || ||
    ||name 	||type 	||required 	||description
    string 	String 	true 	The specified property will be treated as a regular expression.
    ''>>  Returns an Array of length 0 or 1, containing the first match or if no match is found, an empty array.''

==== all ====
-  When the 'all' method is used the compiled patterns are tested and every match is return as an array of objects containing the 'pattern' and 'payload'. The payload is the original JSON object compiled into the router.
    ||'''Parameters'''|| || ||
    ||name 	||type 	||required 	||description
    ||string 	||String 	||true 	||The specified property will be treated as a regular expression.
    ''>>  Returns an Array of length 0 or more, containing the all matches or if no match is found, an empty array.''

----
